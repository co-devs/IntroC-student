Answering all of these questions earns you 3 flags (9pts).  An additional flag is available at the bottom for a total of 4 flags (13pts).

In regards to C programming, define structures.
    A structure is a complex data type declaration that defines a physically grouped list of variables to be placed under one name in a block of memory, allowing the different variables to be accessed via a single pointer, or the struct declared name which returns the same address.

What keyword is used to define variables of structure type?
    struct

What is the member access operator and what is the proper way of using it?
    it is defined to give a class type a "pointer-like" behavior. The operator -> must be a member function. If used, its return type must be a pointer or an object of a class to which you can apply.

Is it possible to pass a structure as a function argument?
    Yes, a structure can be passed to any function from main function or from any sub function.

Is it possible to define pointers to structures? Please provide an example?
    Yes, example:
        typedef struct contacts
            {
                 int number;
                    char id;
            }contactInfo;

            This code defines 2 things:
                 a type named contactInfo
                 a struct named contacts

What can bit fields do in regards to structures?
    The variables defined with a predefined width are called bit fields. A bit field can hold more than a single bit.

What is a union?
    A union is a special data type available in C that allows to store different data types in the same memory location.

How do unions and structures differ?
    - Unions: When a variable is associated with a union, the  compiler allocates the  memory by considering the size of the largest memory. So, size of union is equal to the size of largest member.
    - structures: When a variable is associated with a structure, the compiler allocates the memory for each member. The size of structure is greater than or equal to the sum of  sizes of its members. The smaller members may end with unused slack bytes.

What is enumeration in regards to C?
    An enumeration is a user-defined data type that consists of integral constant.

What is the keyword for enumeration types and why are they used in C programming?
    Enum

Give a few examples of the uses of scructures in C.
    example1
    struct student
    {
    int a;
    char b[10];
    }
        a = 10;
        b = “Hello”;

    example2
    struct tag_name
    {
    data type var_name1;
    data type var_name2;
    data type var_name3;
    };

    struct student
    {
    int  mark;
    char name[10];
    float average;
    }


What is "typedef"?
    The typedef keyword allows the programmer to create new names for types such as int or templated types. It literally stands for "type definition". Typedefs can be used both to provide more clarity to your code and to make it easier to make changes to the underlying data types that you use.

How can you use "typedef" with structures?
    we can use typedef with structure to define a new data type and then use that data type to define structure variables directly.

What are the differences between "typedef" and "#define"?
    - typedef is a compiler token: the preprocessor does not care about it.
    - #define is a preprocessor token: the compiler itself will never see it.
    - typedef is for variables.
    - #define is for a MACRO, for example you may want to have NAME to be always replaced by your name "XYZ". Also, it will just copy-paste the definition values at the point of use, while typedef is actual definition of a new type.

Complete the following statement by filling in the blanks:
	"Structure within a structure is called a (blank) (blank)."

To submit your answer, SHA1 hash the final answer. (Ex: if the two blanks above are dog and fly in that order, you would SHA1 hash "dog,fly" (without quotes and all lower case)) Submit the hash to the CTF server for points.
    nested,structure (cb14481d97b6cc3fe158399376c0c891a65f92fc)
